// Placa: DOIT ESP32 DEVKIT V1
// Upload Speed: 115200
// Flash freq: 40MHz
// Core Debug Level: Ninguno

// VERSION FFT dos canales: se usa el canal del pecho para la respiraci칩n y el 
// canal de la zona inferior del colch칩n para el pulso. 
// Se hace la FFT en el pulso para sacar la frecuencia fundamental. 

#include "arduinoFFT.h"
#include <SOSFilter.h>
#include "BluetoothSerial.h"

// Analog Input
#define ANALOG_PIN_0 39 // Analog Input: ADC_1_0 pin ==> GPIO39 // Para la respiraci칩n
#define ANALOG_PIN_1 34 // GPIO34 // Para el pulso

// Para la FFT
#define SCL_INDEX 0x00
#define SCL_TIME 0x01
#define SCL_FREQUENCY 0x02
#define SCL_PLOT 0x03

// Para el Bluetooth
BluetoothSerial ESP_BT; //Object for Bluetooth
int incoming;
int LED= 2;

float  senal_filtro_h;
float  muestra1b, muestra2b, muestra3b;
float  muestra_h, muestra_b, muestra_filtrada,muestra_filtrada_y;
int  H_R, B_R;
boolean  actividad;

int longitud_vectores=1000;
int  HR_vector[1000], BR_vector[1000], ACT_vector[1000];
//int *HR_vector, *BR_vector, *ACT_vector;
float maximo;
int contador;
int num_respiraciones;
int j;
int limite_ruido_resp=1000; // en amplitud
boolean fin=0;
boolean wait=0;
int longitud_ventana;
int num_promedio=64;
float t1, t2, t_max;
float HR_max=120; //ppm
boolean minimo_detectado;

int t_ini;

// Flags para el BT
boolean inicio_datos = 0;
boolean envio_datos = 0;

arduinoFFT FFT = arduinoFFT(); /* Create FFT object */
const uint16_t samples = 4096; //This value MUST ALWAYS be a power of 2
double  velocidad_muestreo=200; //muestras por seg //Hz, must be less than 10000 due to ADC
double vReal[samples];
double vImag[samples];

//Se침ales de prueba
//float senal_b[]={287.6875,289.09375,290.0625,291.04687,288.9375,290.26562,290.73437,290.84375,290.125,289.71875,289.04687,287.95312,290.29687,289.45312,288.07812,287.84375,289.48437,289.67187,289.92187,289.76562,290.79687,288.6875,287,290.78125,289.125,288.53125,290.34375,289.32812,289.875,290.73437,290.45312,288.45312,290.15625,289.29687,290.89062,290.76562,290.53125,290.15625,288.78125,289.14062,289.875,290.35937,288.15625,290.46875,290.28125,289.09375,289.64062,290.17187,289.03125,287.625,289.54687,290.17187,288.9375,290.79687,289.75,289.8125,288.125,290.5625,290.0625,289.42187,288.04687,290.625,289.07812,290.17187,289.73437,289.4375,288.42187,288.70312,289.96875,289.76562,289.64062,289.17187,289.125,289.20312,287.875,289.625,289.40625,290.5625,288.20312,289.95312,288.92187,287.73437,289.375,287.98437,288.65625,288.15625,289.53125,289.42187,289.82812,290.45312,288.20312,289.54687,289.23437,288.9375,289.76562,288.51562,289.17187,289.40625,291.96875,288.79687,289.34375,288.875,289.10937,285.60937,285.57812,286.01562,287.09375,285.125,287.46875,290.23437,290.82812,291.01562,290.10937,290.28125,289.32812,290.59375,289.375,290.25,289.0625,289.4375,289.51562,289.125,288.76562,288.1875,288.92187,290.57812,290.54687,289.95312,286.5,289,292.20312,288.5,289.03125,288.625,290,289.625,289.73437,288.79687,290.79687,289.9375,290.09375,289.51562,288.1875,290.23437,289.14062,290.79687,3748.07812,3748.96875,3747.25,3750.48437,3747.6875,3753.09375,3752.76562,3749.90625,3749.75,3749.59375,3748.5,3749.53125,3752.21875,3747.375,3756.39062,3754.23437,3751.85937,3750.15625,3753.3125,3748.90625,3754.14062,3753.125,3756.78125,3750.96875,3752.95312,3753.95312,3752.65625,3750.95312,3755.40625,3745.96875,3753.42187,3752.625,3745.625,3747.92187,3747.4375,3749.79687,3746.4375,3747.01562,3749.1875,3744.79687,3753.76562,3751.25,3749.48437,3750.64062,3749.9375,3747.96875,3747.75,3747.82812,3747.32812,3745.875,3749.85937,3748.42187,3749,3749.76562,3749.57812,3748.59375,3747.375,3749.29687,3753.89062,3744.28125,3748.9375,3749.04687,3753.42187,3747.39062,3749.10937,3747.09375,3749.17187,3755.79687,3749.42187,3749.71875,3750.70312,3754.09375,3751,3749.79687,3754.25,3753.03125,3747.82812,3752.45312,3752.40625,3751.26562,3749.82812,3753.67187,3750.76562,3751.85937,3749.51562,3637.64062,3637.14062,3635.82812,3637.82812,3633.28125,3734.73437,3753.4375,3752.32812,3750.26562,3752.45312,3749.20312,3748.51562,3750.15625,3750.01562,3748.28125,3745.90625,3750.59375,3749.15625,3748.6875,3744.75,3750.5625,3746.65625,3752.34375,3753.71875,3753.4375,3754.39062,3754.45312,3752.71875,3754.07812,3753.89062,3751.60937,3752.75,3751.125,3756.09375,3751.20312,3752.9375,3750.82812,3754.85937,3750.76562,3751.95312,3749.03125,3746.35937,3750.32812,3748.46875,3747.3125,3748.4375,3750.5625,3750.85937,3750.84375,3753.15625,3752.14062,3747.35937,3750.09375,3754.20312,3751.10937,3750.73437,3754.46875,3756.375,3754.78125,3750.70312,3754.10937,3752.54687,3753.625,3754.25,3751.70312,3754.42187,3754.92187,3749.29687,3753.5,3747.21875,3751.375,3750.67187,3751.6875,3750.73437,3744.96875,3750.28125,3751.73437,3749.45312,3751.17187,3744.78125,3749.17187,3752.28125,3750.92187,3753.85937,3746.10937,3753.60937,3751.0625,3751.09375,3753.60937,3753.84375,3752.59375,3750.70312,3751.71875,3752.17187,3747.95312,3753.07812,3748.625,3749.90625,3747.28125,3746.79687,3747.875,3747.6875,3750.46875,3748.07812,3741.40625,3748.26562,3749.57812,3745.5,3745.95312,3746.95312,3749.6875,3748.42187,3749.23437,3752.45312,3746.67187,3753.53125,3750.84375,3751.64062,3752.79687,3750.01562,3751.3125,3748.1875,3751.34375,3751.76562,3750.53125,3750.85937,3752.23437,3750.34375,3752.73437,3752.26562,3726.15625,3632.125,3632.39062,3634.125,3631.14062,3629.71875,3753.78125,3751.73437,3750.875,3750.32812,3751.48437,3746.51562,3745.29687,3751.92187,3748.29687,3751.67187,3744.54687,3749.85937,3748.75,3749.45312,3754.59375,3748.10937,3751.20312,3753.01562,3751.4375,3749.46875,3751.3125,3750.57812,3748.40625,3750.57812,3750.9375,3751.5,3751.0625,3753.125,3749.48437,3749.59375,3750.14062,3750.21875,3751.125,3749.6875,3755.45312,3748.45312,3747.42187,3752.70312,3754.9375,3753.92187,3754.53125,3751.625,3753.76562,3754.09375,3753.10937,3750.48437,3756.01562,3751.42187,3751.5625,3749.40625,3749.09375,3752.42187,3753.40625,3753.76562,3750.76562,3746.92187,3752.32812,3751.10937,3749.65625,3746.17187,3750.51562,3753.10937,3755.92187,3748.71875,3751.8125,3752.09375,3752.07812,3753.23437,3753.51562,3752.57812,3755.54687,3751.53125,3753.23437,3755.46875,3750.9375,3753.71875,3754.78125,3755.48437,3754.57812,3753.40625,3748.42187,3749,3749.40625,3748.95312,3750.42187,3750.5,3750.64062,3745.45312,3746.1875,3750.375,3749.32812,3751.15625,3747.67187,3751.59375,3751.5625,3749.35937,3751.95312,3749.6875,3743.125,3749.59375,3751.35937,3755.96875,3754.64062,3755.03125,3753.95312,3754.60937,3752.10937,3756.03125,3748.57812,3755.79687,3757.23437,3755.5625,3755.21875,3754.35937,3753.79687,3752.71875,3753.1875,3755.79687,3745.60937,3756.1875,3755.17187,3753.5625,3633.42187,3637.1875,3636.64062,3640.34375,3634.82812,3635.98437,3747.625,3750.71875,3751.07812,3750.35937,3751.54687,3749.5625,3749.96875,3751.48437,3754.25,3755.76562,3748.98437,3756.625,3755.84375,3716.46875,289.6875,289.76562,289.23437,289.5625,288.1875,288.98437,289.6875,291.39062,289.85937,290.42187,289.82812,288.64062,286.78125,291.53125,288.71875,288.35937,288.125,289.96875,291.09375,289.60937,287.04687,288.35937,289.60937,287.625,289.125,289.79687,290.48437,288.75,289.32812,291.51562,290.375,289.60937,289.65625,289.98437,288.29687,289.48437,289.23437,289.60937,289.21875,289.90625,290.84375,289.5,288.85937,287.42187,290.625,289.70312,289.1875,289.70312,288.29687,289.17187,286.71875,288.53125,290.42187,290.45312,285.60937,289.59375,291.28125,291.23437,288.95312,291.0625,289.8125,288.70312,289.90625,289,289.51562,290,289.60937,290.42187,288.8125,288.125,288.14062,289.32812,288.6875,289.67187,290.375,289.07812,289.96875,289.04687,288.53125,290.48437,289.21875,290.32812,289.25,288.71875,289.26562,289.48437,288.57812,291.125,288.70312,289.57812,290.21875,289.78125,290.57812,289.51562,289.67187,290.29687,289.125,288.78125,290.5625,289.75,288.53125,289.125,288.57812,286.82812,288.70312,288.34375,288.32812,287.92187,289.51562,288.375,289.39062,286.79687,285.96875,286.64062,287.10937,286.1875,286.125,289.84375,290.26562,291.10937,288.26562,290.39062,289.85937,290.67187,289.75,289.6875,289.39062,288.35937,289.34375,289.79687,288.85937,290.26562,290.34375,288.98437,289.45312,288.14062,290.10937,290.375,289.75,288.71875,290,290.0625,291.92187,288.14062,291.03125,289.46875,289.40625,288.75,290.4375,291.10937,289.40625,289.07812,288.79687,289.26562,288.95312,289.53125,289.51562,290.82812,288.25,289.92187,289.29687,289.67187,286.57812,289.53125,289.53125,290.9375,290.32812,289.73437,289.9375,290.42187,290.03125,288.46875,288.71875,288.85937,289,289.82812,290.29687,290.35937,290.125,289.9375,289.51562,289.48437,291.125,289.54687,289.39062,289.25,289.875,291,289.95312,286.5,289.4375,289.03125,288.75,289.59375,288.54687,289.375,287.125,289.46875,290.1875,290.79687,288.67187,290.8125,289.09375,289.76562,289.53125,288.21875,288.89062,288.89062,289.21875,290.14062,288.84375,288.85937,290.40625,289.125,290.64062,288.82812,289.64062,289.46875,289.9375,289.26562,289.6875,289.17187,290.46875,290.32812,289.0625,289.85937,287.89062,289.39062,288.01562,288.3125,290.32812,289.125,288.78125,288,289.79687,291.45312,290.1875,289.8125,288.26562,286.65625,286.45312,285.8125,286.70312,288.17187,290.29687,287.67187,3129.96875,3746.625,3750.14062,3747.0625,3748.73437,3750.0625,3751.8125,3749.42187,3751.1875,3750.10937,289.60937,288.6875,288.9375,289.76562,288.4375,287.54687,288.70312,289.375,290.59375,289.125,289.26562,289.70312,288.90625,289.79687,291.29687,291.34375,289.35937,289.15625,288.9375,289.78125,291.46875,289.125,289.01562,289.0625,289.67187,291.42187,288.6875,291.39062,289.625,289.96875,3674.03125,3749.14062,3745.23437,3749.90625,3752.53125,3756.21875,3753.875,3753.17187,3754.32812,3754.35937,3748.96875,3753.85937,3755.95312,3755.85937,3753.10937,3752.6875,3753.57812,3753.42187,3753.8125,3750.15625,3752.17187,3752.84375,3751.67187,3742.3125,3743.6875,3748.67187,3751.67187,3750.53125,3750.23437,3748.39062,3747.76562,3747.79687,3744.375,3746.78125,3749.03125,3748.73437,3750.28125,3748,3747.3125,3751.0625,3746.79687,3743.03125,3749.73437,3746.4375,3749.8125,3750.85937,3748.79687,3749.03125,3751.46875,3750.57812,3748.20312,3749.76562,3750.54687,3748.76562,3751.5625,3751.1875,3749.23437,3751.34375,3752.89062,3750.29687,3746.21875,3753.14062,3755.32812,3748.14062,3751.98437,3755.14062,3747.35937,3747.15625,3752.4375,3752.3125,3755.32812,3752.82812,3755.21875,3753.67187,3754.125,3754.8125,3753.53125,3752.8125,3753.48437,3753.73437,3752.17187,3751.875,3753.51562,3726.48437,3638.71875,3634.45312,3636.0625,3634.375,3636.23437,3759.125,3751.51562,3748.42187,3752.46875,3747.65625,3749.79687,3750.59375,3750.4375,3751.48437,3751.67187,3749.23437,3750.01562,3750.5625,3750.26562,3750.76562,3750.0625,3753.35937,3757.21875,3754.76562,3752.71875,3755.625,3753.04687,3748.82812,3751.625,3749.53125,3748.79687,3744.17187,3749.20312,3751.20312,3752.01562,3749.01562,3744.59375,3750.78125,3751.07812,3750.60937,3749.32812,3745.48437,3749.57812,3747.875,3747.03125,3751.875,3746.625,3753.39062,3751.92187,3753.15625,3756.32812,3754.9375,3752.67187,3751.26562,3751.32812,3751.23437,3745.96875,3752.03125,3752.5625,3755.29687,3748.76562,3751.8125,3748.28125,3750.8125,3748.25,3747.875,3742.53125,3747.03125,3750.10937,3745.92187,3747.29687,3749,3749.5,3749.6875,3747.35937,3747.92187,3748.17187,3752.21875,3749.40625,3749.34375,3751.375,3745.32812,3748.89062,3748.5,3752.1875,3754.40625,3754.8125,3753.8125,3752.9375,3753.82812,3751.28125,3755.98437,3753.39062,3754.70312,3754.53125,3752.45312,3748.96875,3748.875,3751.84375,3749.4375,3748.07812,3749.59375,3750.70312,3749.85937,3750.42187,3750.75,3747.42187,3748.42187,3748.8125,3749.0625,3752.53125,3752.0625,3753.04687,3754.57812,3754.3125,3749.54687,3751.60937,3751.92187,3754.10937,3752.625,3754.26562,3754.3125,3756.5,3752.17187,3753.46875,3750.67187,3752.14062,3631.5625,3627.76562,3631.79687,3639.15625,3635.01562,3636.25,3758.40625,3754.34375,3759.90625,3755.07812,3751.26562,3754.64062,3755.09375,3752.15625,3755.21875,3754.59375,3752.67187,3750.45312,3754.23437,3751.375,3754.95312,3752.53125,3751.21875,3754.57812,3750.23437,3750.10937,3749.625,3749.25,3750.25,3746.21875,3748.0625,3752.85937,3750.42187,3749.17187,3747.82812,3750.0625,3750.84375,3750.26562,3749.98437,3748.90625,3748.21875,3747.8125,3746,3753.57812,3749.76562,3752.73437,3752.71875,3754.28125,3753.71875,3751.875,3750.57812,3751.4375,3748.46875,3749.45312,3752.60937,3751.60937,3753.84375,3752,3752.79687,3746.07812,3752.64062,3753.29687,3751.03125,3751.3125,3747.60937,3748.89062,3753.32812,3751.48437,3748.6875,3744.96875,3752.57812,3752.26562,3747.0625,3750.96875,3750.35937,3749.82812,3748.98437,3747.71875,3750.6875,3743.64062,3751.73437,3749.65625,3747.4375,3748.26562,3751.5,3753.79687,3751.75,3753.3125,3752.8125,3743.42187,3753.89062,3753.85937,3752.39062,3752.34375,3750.01562,3753.5,3753.71875,3749.60937,3752.17187,3748.92187,3755.89062,3754.23437,3753.48437,3752.89062,3754.78125,3748.6875,3749.76562,3748.48437,3750.8125,3749.10937,3749.59375,3747.46875,3747.95312,3750.09375,3749.89062,3751.09375,3751.29687,3752.01562,3752.20312,3747.70312,3751.3125,3749.70312,3751.67187,3751.14062,3748.92187,3750.84375,3751.07812,3751.96875,3754.07812,3754.46875,3752.39062,3634.32812,3633.28125,3633.85937,3635.90625,3636.03125,3638.0625,3756.35937,3751.51562,3753.98437,3752.57812,3749.73437,3748.46875,3750.03125,3750.8125,3752.28125,3751.76562,3752.5,3753.76562,3748.9375,3749.42187,3748.65625,3747.07812,3751.32812,3752.45312,3752.125,3748.70312,3748.26562,3756.20312,3753.1875,3750.67187,3750.4375,3748.5,3751.8125,3748.48437,3753.875,3751.3125,2201.20312,288.65625,288.85937,288.78125,289.82812,289.6875,289.3125,289.09375,288.78125,285.92187,289.64062,289.32812,288.70312,289.6875,287.78125,288.92187,290.67187,290.03125,288.82812,289.28125,291.73437,289.96875,288.32812,289.67187,287.65625,289.67187,289.26562,287.73437,289.34375,289.07812,288.73437,290.25,290.40625,289.89062,289.5,289.42187,289.5625,289.90625,290.09375,287.64062,288.73437,290.57812,288.89062,288.42187,289.75,290,289.78125,287.9375,289.76562,288.76562,289.60937,289.23437,289.67187,289.84375,288.40625,289.03125,289.89062,289.04687,290.03125,288.82812,288.64062,286.48437,290.28125,288.78125,288.82812,289.07812,290.89062,288.8125,291.46875,290.42187,288.3125,289.57812,288.82812,287.9375,288.3125,289.51562,289.48437,289.28125,288.4375,289.92187,289.28125,288.5,289.90625,289.5,288.57812,289.70312,287.78125,290.1875,290.04687,290.375,289.875,288.59375,286.54687,287.6875,286.07812,285.65625,285.07812,287.70312,288.59375,288.9375,288.75,289.875,289.03125,289.23437,288.54687,288.5625,290.07812,288.5,290.90625,289.03125,288.09375,290.8125,289.4375,287.84375,290.26562,289.70312,290.75,289.1875,289.89062,290.23437,289.1875,289.82812,290.5625,289.54687,289.70312,290.10937,289.76562,288.32812,288.70312,289.51562,288.625,289.09375,288.84375,288.04687,290.15625,289.01562,289.375,290.29687,290.14062,289.35937,288.26562,286.53125,288.5625,289.17187,288.90625,289.15625,288.23437,288.625,290.46875,287.65625,288.46875,290.09375,288.70312,287.82812,289.32812,288.96875,289,290.04687,291.59375,288.6875,289.51562,289.10937,288.84375,288.60937,288.04687,289.53125,288.95312,288.98437,290.1875,291.48437,290.96875,289.42187,289.09375,289.45312,288.67187,289.65625,288.75,289.53125,289.5625,289.03125,288.78125,291,289.64062,289.45312,289.60937,288.75,288.40625,290.09375,288.10937,290.40625,289.29687,290.26562,291.14062,289.4375,289.3125,287.82812,289.1875,289.39062,289.75,289.53125,289.59375,289.23437,288.78125,290.875,289.0625,288.29687,287.95312,289.40625,289.32812,290.64062,287.625,289,290.10937,289.71875,291.375,288.9375,286.5,291.35937,289.89062,289.46875,287.8125,290.03125,289.71875,286.3125,286.5,286.3125,286.98437,287.5,289.64062,290.04687,289.78125,289.625,288.6875,288.75,288.98437,289.21875,289.98437,290.57812,291.03125,290.4375,289.10937,290.25,291.09375,289.71875,289.42187,289.46875,290.70312,288.65625,288.125,288.98437,289.82812,288.70312,288.89062,289.85937,290.875,288.48437,288.35937,288.9375,291.32812,290.25,288.57812,291.8125,289.92187,287.92187,290.21875,289.79687,289.01562,288.75,288.54687,289.45312,289.5,290.21875,290.48437,288.40625,289.84375,289.6875,289.70312,286.90625,289.625,288.8125,289.28125,290.60937,290.17187,289.71875,290.625,288.4375,289.51562,287.95312,288.28125,290.53125,289.78125,289.70312,289.46875,289.51562,289,290.0625,288.79687,290.98437,289.14062,288.09375,288.6875,290.17187,289.39062,3748.5625,3750.25,3744.9375,3748.14062,3748.9375,3752.125,3750.01562,3749.1875,3749.17187,3749.84375,3747.70312,3740.90625,3745.51562,3753.32812,3751.96875,3752.09375,3754.79687,3752.35937,3750.10937,3751.10937,3753.51562,3752.98437,288.5625,288.20312,286.98437,288.09375,289.79687,289.82812,289.09375,3754.15625,3748.8125,3750.29687,3745.625,3749.71875,3754.01562,3750.65625,3749.84375,3748.95312,3749.09375,3746.34375,3749.32812,3749.0625,3744.92187,3745.79687,3747.65625,3751.40625,3749.8125,3629.40625,3630.75,3632.51562,3640.6875,3638.65625,3634.82812,3756.92187,3759.04687,3754.5625,3755.07812,3752.42187,3753.82812,3751.51562,3751.9375,3753.73437,3755.17187,3751.65625,3754.60937,3754.6875,3752.6875,3754.45312,3749.51562,3744.42187,3749.75,3748.89062,3749.92187,3751.125,3747.79687,3750.03125,3748.5625,3749.54687,3751.04687,3746.28125,3750.6875,3748.76562,3750.09375,3749.42187,3751.375,3742.1875,3749.73437,3751.98437,3749.42187,3747.75,3751.35937,3750.4375,3751.51562,3748.60937,3744.82812,3747.9375,3750.14062,3748.23437,3751.20312,3749.21875,3751.35937,3748.98437,3748.96875,3748.39062,3747.76562,3751.65625,3753.5625,3754.26562,3754.1875,3752.73437,3740.45312,3756.375,3753.4375,3750.60937,3754.21875,3755.17187,3753.15625,3755.48437,3755.79687,3750.59375,3751.5,3752.5625,3750.21875,3748.34375,3751.75,3751,3752.92187,3748.28125,3748.5625,3747.8125,3748.45312,3747.59375,3747.25,3751.17187,3750.60937,3752.53125,3752.5,3750.20312,3750.48437,3748.15625,3747.09375,3749.76562,3744.25,3753.60937,3751.73437,3750.35937,3750.23437,3751.4375,3750.14062,3749.25,3748.40625,3748.29687,3743.96875,3749.76562,3752.14062,3750.82812,3750.6875,3750.75,3748.20312,3751.625,3747.92187,3749.45312,3745.32812,3754.125,3747.53125,3751.40625,3750.04687,3745.90625,3749.5625,3751.20312,3749.71875,3753.85937,3748.21875,3752.42187,3753.04687,3752.25,3752.60937,3752.95312,3632.65625,3633.76562,3634.82812,3633.85937,3632.5625,3634.6875,3758.09375,3757.82812,3755.75,3752.46875,3752.39062,3752.0625,3755.07812,3756.15625,3749.42187,3752.53125,3750.76562,3751.5625,3747.82812,3747.46875,3752.48437,3746.03125,3750.26562,3752.32812,3748.60937,3747.92187,3751.375,3749.875,3745.32812,3747.14062,3749.98437,3747.9375,3750.79687,3750.5625,3748.5,3751.625,3754.875,3751.17187,3753.40625,3748.71875,3753.375,3752.23437,3751.82812,3752.9375,3751.35937,3749.25,3751.53125,3752.54687,3751.25,3751.48437,3748.5,3747.3125,3747.95312,3754.17187,3747.17187,3749.125,3742.1875,3749.6875,3750.71875,3750.375,3749.76562,3747.84375,3751.4375,3749.67187,3749.60937,3750.95312,3753.26562,3756.46875,3755.07812,3752.4375,3752.875,3752.96875,3753.48437,3750.0625,3751.04687,3751.48437,3756.375,3746.39062,3752.26562,3751.82812,3752.76562,3741.84375,3750.28125,3753.70312,3747.92187,3749.29687,3748.70312,3746.6875,3744.60937,3745.4375,3749.76562,3750.57812,3752.75,3750.4375,3749.04687,3749.125,3751.1875,3743.67187,3749.14062,3739.32812,3752.3125,3750.42187,3752.46875,3753.35937,3752.28125,3752.9375,3752.40625,3752.82812,3746.21875,3754.92187,3755.07812,3754.1875,3752.15625,3752.64062,3747.4375,3751.07812,3744.04687,3749.28125,3753.73437,3753,3747,3748.875,3752.125,3754.01562,3739.125,3749.65625,3755.3125,3754.35937,3638.70312,3636.51562,3636.76562,3635.54687,3636.89062,3739.9375,3750.67187,3753.53125,3753.57812,3754.76562,3753.57812,3758.35937,3753.375,3754.26562,3754.28125,3756.0625,3747.0625,3750.09375,3750.03125,3743.98437,3750,3749.45312,3750.90625,3753.04687,3751.39062,3750.78125,3747.9375,3754.29687,3744.4375,3753.23437,3753.57812,3752.53125,3750.34375,3750.65625,3752.75,2360.75,286.46875,289.07812,288.71875,287.10937,288.26562,288.84375,290.125,288.64062,290.17187,289.6875,289.5625,289.78125,288.59375,290.25,289.17187,289.17187,288.92187,290.48437,290.28125,289.10937,289.0625,289.8125,289.82812,287.8125,289.40625,287.8125,289.75,289.09375,290.48437,289.6875,289.59375,286.76562,289.75,288.57812,290.23437,288.67187,289.1875,290.5625,288.54687,288.21875,289.1875,289.15625,290.23437,288.82812,289.85937,289.48437,288.84375,289.79687,288.6875,289.26562,289.3125,290.90625,288.67187,288.59375,290.45312,289.875,289.15625,289.45312,288.92187,287.875,288.76562,287.64062,287.8125,292.125,289.0625,288.48437,289.3125,290.25,290.07812,289.59375,290.03125,290.5625,288.15625,290.6875,289.48437,290.84375,289.65625,290.17187,288.20312,289.98437,284.09375,288.51562,288.10937,290.45312,289.84375,292.28125,289.21875,290.23437,288.21875,290.75,287.82812,292.25,289.85937,288.23437,288.10937,286.14062,288.35937,286.3125,283.45312,286.03125,290.96875,290,288.10937,289.40625,288.84375,289.5625,290.03125,285.23437,288.79687,290.15625,288.98437,286.10937,288.26562,288.35937,289.14062,288.0625,289.14062,289.79687,288.14062,288.1875,288.76562,290.67187,289.17187,288.85937,288.65625,288.28125,290.53125,289.32812,289.67187,288.9375,287.8125,288.48437,290.42187,289.01562,287.29687,289.07812,289.03125,288.45312,289.60937,289.53125,288.92187,289.54687,289.45312,288.67187,288.53125,290.03125,289.8125,288.78125,288.59375,290.64062,289.20312,290.42187,289.1875,287.98437,287.90625,288.15625,288.65625,289.59375,289.23437,289.17187,288.84375,287.4375,290,289.48437,287.51562,289.23437,289.01562,288.40625,289.5,288.53125,289.32812,290.5625,287.8125,289.71875,289.9375,288.76562,289.73437,288.60937,290.5625,289.6875,288.48437,290.92187,290.3125,287.90625,290.35937,289.76562,290.42187,290.73437,288.82812,289.28125,288.73437,288.85937,289.98437,288.98437,289.32812,290.45312,289.25,288.35937,288.25,288,288.90625,286.78125,288.4375,288.09375,289.65625,288.5625,289.90625,289.59375,289.3125,289.85937,289.15625,289.28125,289.59375,289.84375,289.57812,289.78125,287.4375,290.20312,290.01562,287.40625,289.82812,284.57812,286.71875,285.07812,286.42187,284.89062,286.64062,285.17187,289.96875,289.82812,286.71875,291.20312,289.26562,289.54687,289.40625,289.20312,284.51562,289.78125,290.5,287.28125,289.09375,292.21875,289.75,289.21875,287.85937,289.78125,288.17187,289.89062,290.35937,288.4375,288.0625,289.6875,286.71875,289.625,288.3125,289.40625,290.07812,289.73437,288.64062,290.5,289.09375,289.70312,289.8125,291.0625,289.25,289.5,288.78125,288.64062,290.4375,289.03125,288.79687,291.03125,289.84375,289.75,288.82812,289.03125,288.75,289.25,289.875,289.875,287.64062,288.125,289.03125,290.39062,287.45312,288.98437,289.60937,3748.76562,3746.25,3750.5,3744.76562,3749.04687,3747.29687,3749.60937,3749.5625,3745.5625,3749.23437,3748.5,3748.98437,3749.4375,3742.29687,3752.25,3752.21875,3753.8125,3753.51562,3751.65625,3752.21875,3752.1875,3753.98437,3754.35937,3750.53125,3754.39062,3752.20312,3750.60937,3748.125,3750.57812,3751.10937,3747.10937,3753.32812,3753.60937,3753.17187,3748.8125,3750.1875,3743.71875,3748.76562,3749.95312,3750.90625,3750.79687,3750,3750.14062,3748.375,3751.25,3741.96875,3747.89062,3749.64062,3747.95312,3750.25,3751.01562,3756.60937,3754.625,3749.98437,3751.9375,3752.875,3754.59375,3752.70312,3753.64062,3755.21875,3756.01562,3750.84375,3750.23437,3754.39062,3746.625,3749.65625,3630.25,3633.59375,3633.09375,3635.34375,3634.125,3634.64062,3754.07812,3752.34375,3751.96875,3752.04687,3748.21875,3753.0625,3751.28125,3751.84375,3756.625,3755.09375,3754.375,3752.26562,3754.71875,3753.26562,3749.89062,3755.89062,3757.79687,3753.23437,3755.4375,3755,3751.67187,3753.03125,3751.70312,3753.64062,3749.5,3753.875,3753.96875,3755.07812,3753.14062,3749.34375,3749.28125,3753.0625,3755.20312,3752.15625,3751.35937,3747.95312,3754.4375,3747.96875,3749.65625,3754.65625,3752.53125,3749.125,3756.40625,3757,3755,3750.45312,3748.625,3752.79687,3752.96875,3748.25,3751.03125,3744.14062,3752.53125,3750.89062,3746.3125,3747.0625,3750.92187,3750.09375,3750.57812,3749.54687,3751.125,3745.96875,3747.875,3750.5625,3744.09375,3749.71875,3745.10937,3750.17187,3748.28125,3750.23437,3751.42187,3744.76562,3756.01562,3750.4375,3747.71875,3751.95312,3755.14062,3743.14062,3749.125,3753.98437,3753.14062,3745.28125,3747.4375,3753.42187,3751.26562,3753.84375,3752.8125,3752.26562,3751.45312,3754.4375,3752.1875,3746.28125,3752.90625,3752.25,3753.01562,3751.20312,3753.54687,3752.39062,3753.45312,3751.40625,3753.9375,3749,3748.875,3751.34375,3749.40625,3748.23437,3751.09375,3751.92187,3748.98437,3749.28125,3753.90625,3750.14062,3752.71875,3752.5625,3750.45312,3752.89062,3753.57812,3753,3753.03125,3754.53125,3754.89062,3751.25,3641.4375,3633.32812,3634.875,3635.5,3637.46875,3737,3756.89062,3752.875,3748.51562,3746.59375,3752.82812,3750.82812,3748.90625,3750.26562,3751.14062,3754.65625,3747.73437,3751.04687,3751.67187,3751.23437,3750.01562,3749.07812,3745.35937,3751.4375,3752.70312,3754.9375,3753.29687,3751.89062,3753.21875,3752.5625,3752.96875,3757.29687,3750.78125,3752.23437,3753.51562,3755.5,3753.29687,3751.92187,3755.28125,3752.67187,3752.07812,3752.26562,3750.8125,3752.03125,3750.3125,3748.5625,3746.84375,3749.26562,3748.70312,3748.8125,3749.96875,3749,3747.92187,3753.17187,3752.3125,3750.14062,3751.76562,3751.85937,3749.15625,3752.57812,3752.01562,3754.60937,3753.65625,3754.95312,3754.45312,3754.4375,3754.46875,3751.65625,3749.03125,3745.04687,3752.5,3751.89062,3750.875,3744.21875,3749.51562,3746.60937,3749.34375,3747.4375,3749.0625,3748.96875,3751.3125,3751.60937,3751.59375,3751.625,3747.70312,3751.4375,3749.03125,3748.40625,3749.03125,3743.875,3754.59375,3754.23437,3755.15625,3750.4375,3751.85937,3750.875,3754.8125,3753.01562,3751.6875,3748.21875,3753.03125,3753.10937,3753.40625,3754.25,3750.60937,3754.09375,3753.9375,3753,3750.375,3747.21875,3751.95312,3754.89062,3750.0625,3751.79687,3752.54687,3752.01562,3751.4375,3751.95312,3754.54687,3751.26562,3752.42187,3753.90625,3751.95312,3752.01562,3752.79687,3751.26562,3751.10937,3748.0625,3749.5,3746.375,3727.3125,3633.28125,3632.5625,3632.03125,3630.40625,3634.59375,3754.90625,3755.26562,3751.46875,3750.01562,3749.625,3751.625,3749.14062,3747.375,3750.1875,3751.64062,3752.40625,3750.46875,3749.375,3752,3754.6875,3753.84375,3750.48437,3753.70312,3755.40625,3754.73437,3752.21875,3756.0625,3753.85937,3753.8125,3749.39062,3755.48437,3748.20312,3755.09375,3753.39062,3752.64062,3750.9375,3753.53125,3753.875,3750.10937,3752.82812,3751.28125,3745.82812,3753.84375,3750.07812,3750.76562,3752.96875,3755.48437,3753.4375,3748.64062,3744.59375,3751.67187,3748.70312,3752.90625,3750.42187,3754.82812,3755.42187,3752.96875,3751.3125,3748.40625,3750.51562,3748.8125,3745.85937,3750.4375,3748.5625,3750.17187,3749.98437,3751.60937,3750.625,3749.0625,3750.76562,288.5625,290.20312,289.10937,288.57812,290.75,285.01562,288.78125,289.67187,289.85937,288.25,288.28125,291.17187,288.98437,289.14062,285.40625,289.53125,288.98437,286.64062,288.79687,289.65625,289.29687,289.48437,288.98437,288.85937,289.64062,288.40625,289.34375,288.75,289.25,290.71875,289.9375,286.75,289.01562,291.90625,289,289.78125,289.67187,288.6875,288.35937,289.60937,288.3125,288.34375,287.4375,289.73437,289.03125,290.42187,286.9375,289.40625,288.90625,287.57812,288.32812,288.46875,289.51562,290.40625,290.53125,288.76562,290,284.79687,285.82812,286.20312,285.64062,286.48437,287,289.84375,289.85937,291.14062,287.54687,290.14062,289.90625,288.3125,288.65625,290.65625,289.79687,288.48437,288.375,288.10937,287.71875,286.29687,289.21875,288.4375,289.92187,289.625,289.26562,289.53125,289.04687,290.48437,289.73437,288.9375,289.92187,290.125,289.6875,291.20312,285.15625,289.51562,288.07812,288.4375,290.01562,286.73437,288.35937,288.40625,290.5625,289.01562,290.89062,289.42187,288.5,290.59375,288.15625,290.26562,289.84375,288.75,289.78125,289.23437,288.14062,288.53125,289.73437,289.57812,287.82812,289.53125,288.9375,289.42187,289.20312,288.48437,290.35937,288.65625,291.23437,289.82812,287.75,290.71875,287.92187,291.125,289.4375,289.71875,286.92187,288.96875,290.40625,290.54687,289.5,289.54687,290.46875,290.90625,289.625,288.5625,288.82812,290.10937,289.8125,290.1875,289.70312,289.0625,289.35937,290.42187,290.34375,289.26562,288.1875,284.84375,289.92187,289.48437,288.85937,289.32812,289.46875,289.73437,287.90625,289.32812,290.32812,286.53125,288.10937,289.42187,288.375,289.75,289.57812,289.04687,291.5,290.53125,289.34375,290.26562,289.95312,286.46875,288.125,289.5625,288.01562,290.59375,289.03125,289.65625,290.01562,290.53125,289.84375,288.96875,289.625,289.59375,284.89062,287.20312,286.4375,287.60937,286.625,286.0625,290.42187,290.42187,288.0625,289.09375,291.0625,287.20312,290.20312,290.4375,288.78125,289.34375,289.40625,289.15625,288.3125,291.14062,288.82812,288.71875,288.9375,290.15625,290.09375,289.57812,290.40625,289.98437,288.57812,287.92187,290.1875,289.09375,289.64062,288.96875,288.20312,292.625,289.64062,289.25,288.51562,291.17187,288.54687,289.92187,290.29687,288.70312,289.09375,290.23437,290.03125,288.82812,290.10937,288.875,288.125,288.35937,288.15625,289.125,292.26562,289.35937,288.82812,289.04687,289.8125,289.21875,290.17187,291.53125,289.73437,290.625,289.21875,290.0625,289.57812,282.54687,288.6875,292.25,289.35937,290.1875,290.82812,288.01562,288.96875,287.89062,290,288.375,288.65625,289.70312,288.125,289.76562,288.82812,289.375,290.25,287.98437,289.96875,289.20312,288.54687,288.4375,288.875,288.8125,291.65625,288.84375,288.57812,287.0625,288.60937,289.73437,289.40625,287.79687,289.17187,288.03125,287.98437,289.60937,288.82812,289.92187,289.875,289.28125,289.96875,288.28125,288.375,290.1875,290.85937,289.75,289.8125,289.23437,289.78125,289.625,289.71875,3753.875,3753.15625,3753.6875,3750.28125,3747.57812,3749.20312,3752.85937,3751.42187,3750.84375,3634.1875,3625.59375,3631.39062,3633.17187,3634.0625,3734.96875,3755.9375,3757.01562,3757.51562,3754.85937,3756.45312,3758.70312,3751.29687,3755.79687,3753.48437,3746.95312,3754.65625,3754.70312,3754,3750.07812,3752.73437,3745.1875,3748.34375,3749.75,3749.23437,3748.35937,3748.35937,3750.875,3748.1875,3749.82812,3751.78125,3751.46875,3749.53125,3748.70312,3752.59375,3751.76562,3748.8125,3749.5,3749.48437,3746.35937,3749.82812,3748.84375,3748.82812,3753,3750.84375,3752.03125,3753.42187,3754.82812,3752.21875,3750.9375,3754.29687,3753.35937,3751.39062,3754.26562,3748.5625,3750.79687,3752.14062,3753.70312,3754.82812,3752.625,3754.42187,3756.29687,3752.79687,3753.84375,3754.35937,3752.42187,3752.79687,3752.15625,3755.34375,3752.34375,3749.57812,3752.5,3750.09375,3755.0625,3750.67187,3748.64062,3748.23437,3749.0625,3751.375,3749.9375,3749.98437,3750.48437,3747.39062,3750.40625,3748.98437,3750.0625,3748.60937,3748.98437,3749.20312,3750.03125,3749.78125,3749.95312,3750.125,3753.23437,3752.32812,3753.0625,3754.71875,3751.04687,3753.92187,3755.04687,3752.95312,3754.78125,3751.84375,3749.39062,3745.5,3744.125,3752.5,3753.6875,3751.32812,3751.10937,3752.03125,3748.53125,3747.26562,3749.17187,3745.34375,3744.375,3743.96875,3749.23437,3753.67187,3750.71875,3756.82812,3752.46875,3752.21875,3756.71875,3752.78125,3746.64062,3753.07812,3755.20312,3755.32812,3753.51562,3732.51562,3631.51562,3632.78125,3633.6875,3636.75,3631.6875,3757.70312,3754.875,3757.51562,3752.04687,3753.57812,3748.28125,3751.54687,3751.14062,3751.20312,3743.5625,3752.28125,3751.21875,3750.71875,3749.5625,3751.1875,3746.84375,3746.03125,3748.875,3750.15625,3751.03125,3751.60937,3754.96875,3752.29687,3749.98437,3752.82812,3748.48437,3747.98437,3750.29687,3750.5625,3755.125,3746.98437,3753.28125,3749.75,3749.875,3746.26562,3748.89062,3749.25,3751.96875,3752.98437,3750.01562,3747.76562,3751.54687,3749.6875,3748.21875,3753.6875,3753.60937,3753.07812,3753.84375,3752.76562,3750.82812,3749.25,3753.8125,3752.71875,3750.10937,3753.48437,3753.39062,3749.92187,3753.46875,3754.8125,3746.6875,3752.3125,3754.35937,3751.57812,3753.95312,3747.53125,3755.76562,3750.125,3750.51562,3750.8125,3750.42187,3745.5,3749.23437,3750.5625,3748.64062,3747.92187,3747.09375,3748.125,3754.75,3752.3125,3754.35937,3748.21875,3750.78125,3752.0625,3751.70312,3751.90625,3754.54687,3752.1875,3750.40625,3750.95312,3750.60937,3747.29687,3751.625,3748.29687,3751.3125,3749.32812,3747.875,3749.75,3751.51562,3752.48437,3748.60937,3750.21875,3750.17187,3748.57812,3749.71875,3753.54687,3753.03125,3750.21875,3753.85937,3751.59375,3751.89062,3752.9375,3753.03125,3751.64062,3751.90625,3752.96875,3754.03125,3751.375,3750.98437,3754.07812,3748.14062,3754.54687,3754.9375,3633.8125,3627.82812,3631.92187,3634.64062,3631.89062,3632.6875,3753.70312,3745.82812,3751.375,3749.28125,3752.40625,3750.53125,3747.95312,3751.60937,3750.42187,3754.25,3751.46875,3747.03125,3755.3125,3755.76562,3753.39062,3753.8125,3754.98437,3752.6875,3753.92187,3754.04687,3755.15625,3749.26562,3751.85937,3752.0625,3750.98437,288.26562,290.39062,289.71875,287.9375,289.42187,288.0625,286.53125,290.75,289.82812,289.96875,289.6875,289.03125,290.14062,289.71875,289.75,288.59375,289.78125,290.84375,289.26562,290.78125,288.46875,289.375,288.96875,289.90625,288.89062,289.625,286.64062,289.46875,290.90625,289.53125,290.60937,289.70312,291.28125,288.5625,289.25,290,289.875,288.54687,287.3125,289.89062,288.26562,287.53125,289.96875,289.39062,288.07812,288.90625,289.03125,292.28125,289.73437,288.21875,291.92187,289.375,290.3125,287.29687,290.10937,290.375,289.65625,288.26562,289.75,290.15625,289.53125,288.75,289.21875,288.21875,288.90625,287.40625,289.5,289.46875,289.17187,284.92187,287.64062,290.48437,288.14062,287.09375,289.57812,289.125,290.04687,289.35937,288.10937,291.29687,285.07812,289.76562,290.57812,286.21875,290.59375,288.57812,286.04687,290.21875,289.54687,288.85937,290.89062,288.67187,289.67187,289.3125,286.21875,288.5,289.65625,290.35937,290.40625,289.34375,286.82812,286.35937,288.07812,287.34375,285.60937,285.78125,288.26562,287.48437,290.14062,288.67187,288.125,289.01562,288.51562,286.75,289.96875,289.78125,290.78125,286.79687,289.03125,289.07812,287.5625,288.04687,288.10937,289.53125,290.89062,288.32812,286.76562,288.90625,289.25,289.1875,290.10937,288.51562,289.54687,290.01562,289.3125,288,288.70312,289.89062,290.14062,286.32812,288.70312,285.07812,289.82812,289.40625,288.875,289.98437,289.48437,288.42187,291.28125,287.53125,288.82812,288.82812,287.79687,288.01562,290.79687,288.14062,287.73437,288.9375,287.70312,289.46875,288.57812,289.65625,290.5,290.70312,291.46875,288.14062,287.35937,289.71875,289.9375,289.57812,289.3125,289.17187,291.25,290.96875,289.90625,290.03125,290.59375,290.4375,289.76562,289.21875,288.07812,289.75,290.10937,289.78125,289.59375,289.73437,290.01562,289.59375,291.10937,290.10937,290.25,288.53125,289.20312,290.85937,290.60937,289.64062,291.90625,287.40625,292.5,289.96875,289.04687,288.76562,289.34375,289.01562,290.0625,290.28125,290.1875,287.82812,291.21875,287.21875,287.45312,290.84375,290.29687,289.65625,290.09375,290.03125,288.73437,288.17187,289.39062,289.20312,289.48437,290.625,290.625,289.5,289.85937,289.34375,287.48437,289.0625,288.73437,285.5625,286.95312,286.1875,288.21875,289.15625,288.26562,289.57812,291.46875,290.1875,289.65625,289.20312,290.46875,289.73437,291.07812,289.04687,286.96875,288.79687,290,289.84375,291.42187,289.20312,287.65625,290.375,290.1875,290.21875,289.75,289.23437,288.17187,289.54687,290,289.10937,291.1875,287.5,287.79687,289.92187,288.42187,291.10937,290.23437,288,289.125,288.28125,289.89062,289.1875,294.14062,288.98437,289,288.34375,289.71875,288.23437,285.23437,290.46875,287.26562,289.5625,289.67187,290.79687,288.84375,287.23437,290.01562,286.29687,289,288.25,288.78125,290.375,308.89062,3748.3125,3749.60937,3751.28125,3749.45312,3754.9375,3754.90625,3753.14062,3752.5,3752.98437,3753.10937,3753.84375,3752.45312,3752.73437,3746.04687,3755.09375,3754.10937,3751.625,3752.90625,3752.5625,3752.9375,3751.09375,3754.25,3754.98437,3748.875,3751.71875,3747.82812,3747.73437,3748.79687,3748.1875,3752.20312,3749.07812,3750.25,3749.95312,3746.98437,3747.1875,3747.76562,3748.0625,3748.26562,3749.42187,3748.92187,3744.60937,3749.01562,3749.5,3750.34375,3749.70312,3749.8125,3750.51562,3747.9375,3752,3749.46875,3749.76562,3755.29687,3749.01562,3746.5,3751.70312,3754.125,3750.375,3748.59375,3753.17187,3752.25,3750.75,3748.84375,3753.98437,3752.29687,3754.75,3723.60937,3634.8125,3638.01562,3633.9375,3633.45312,3631.57812,3750.3125,3749.21875,3748.14062,3749.04687,3750.375,3750.85937,3747.60937,3751.53125,3747.98437,3748.67187,3748.5625,3752.71875,3755.90625,3748.875,3753.29687,3752.03125,3755.78125,3752.875,3753.14062,3752.125,3754.60937,3755.4375,3751.40625,3752.21875,3752.26562,3752.59375,3758.01562,3752.92187,3751.26562,3753.29687,3754.875,3749.60937,3750.53125,3749.14062,3750.34375,3747.5,3749.90625,3751.48437,3750.98437,3749.625,3750.70312,3746.75,3749.14062,3745.76562,3751.35937,3747.3125,3750.03125,3754.125,3754.40625,3750.60937,3750.9375,3753.125,3745.40625,3754.0625,3751.71875,3750.67187,3749.75,3749.48437,3748.39062,3749.875,3748.29687,3750.03125,3743.8125,3750.64062,3750.3125,3747.70312,3748.625,3749.01562,3750.20312,3749.14062,3751.70312,3752.125,3746.6875,3754.76562,3754.95312,3751.46875,3753.82812,3752.89062,3754.625,3753.82812,3753.65625,3751.54687,3747.35937,3753.96875,3752.71875,3751.76562,3753.17187,3753.07812,3751.14062,3751.01562,3753.57812,3755.14062,3749.46875,3750.04687,3749.45312,3748.39062,3752.29687,3750.54687,3749.01562,3750.8125,3746.45312,3749.6875,3749.89062,3750.625,3753.59375,3750.6875,3749.14062,3750.28125,3747.89062,3745.9375,3752.29687,3753.75,3747.59375,3755.78125,3752.26562,3752.0625,3752.14062,3752.82812,3751.54687,3751.15625,3752.875,3749.98437,3627.89062,3634.34375,3633.9375,3636.67187,3633.26562,3632.90625,3752.84375,3752.09375,3749.5625,3748.04687,3750.04687,3752.67187,3752.57812,3751.09375,3750.6875,3755.42187,3752.29687,3749.40625,3758.73437,3753.64062,3751.04687,3750.28125,3752.5625,3751.14062,3755.5,3753.01562,3753.125,3754.39062,3753.75,3752.26562,3747.78125,3753.14062,3750.78125,3751.35937,3753.79687,3753.04687,3754.90625,3752.1875,3748.76562,3752.75,3753.53125,3754.10937,3755.17187,3753.29687,3755.17187,3755.15625,3755.29687,3752.3125,3752.57812,3753.96875,3754.96875,3747.79687,3753.26562,3751.75,3750.42187,3751.0625,3749.3125,3745.6875,3750.01562,3751.60937,3746.26562,3749.51562,3750.75,3746.39062,3741.98437,3751.23437,3749.64062,3751.25,3749.20312,3748.34375,3748.90625,3748.48437,3749.1875,3747.40625,3750.79687,3748.79687,3749.15625,3753.71875,3755.25,3750.34375,3748.34375,3753.23437,3751.85937,3753.54687,3754.26562,3751.96875,3753.34375,3749.15625,3752.23437,3752.57812,3748.98437,3750.78125,3752.9375,3751.23437,3751.125,3752.42187,3749.65625,3747.28125,3752.375,3752.39062,3744.5,3750.46875,3747.89062,3747.23437,3742.20312,3752.6875,3748.4375,3749.14062,3749.4375,3751.92187,3744.96875,3748.875,3748.125,3747.0625,3748.4375,3751.85937,3749.39062,3749.85937,3750.98437,3750.46875,3746.28125,3751.73437,3752.42187,3753.375,3754.98437,3753.04687,3751.14062,3754.3125,3751.70312,3751.84375,3751.40625,3632.10937,3631.98437,3630.32812,3637.42187,3635.20312,3635.70312,3757.57812,3753.84375,3753.67187,3755.29687,3751.26562,3749.40625,3749.71875,3750.625,3752.5625,3751.20312,3749.46875,3750.29687,3751.67187,3752.75,3752.4375,3751.09375,3749.45312,3748.76562,3751.39062,3750.82812,3756.1875,3755.125,3755.125,3752.48437,3757.09375,3755.82812,3753.04687,3754.8125,3752.625,3751.8125,3753.57812,3752.1875,3750.15625,3747.79687,3752.875,3753.04687,3748.73437,3752.14062,3753.34375,3750.45312,3749.20312,3745.35937,3749.76562,3744.0625,3747.48437,3747.14062,3744.78125,3751.21875,3749.92187,3750.1875,3748.85937,3748.3125,3748.70312,3747.64062,3752.48437,3751.3125,3749.51562,289.09375,288.15625,288.01562,288.90625,289.64062,288.15625,287.39062,287.54687,289.875,288.54687,288.85937,289.51562,289.01562,289.1875,288.71875,289.375,290.67187,290.5,288.29687,288.78125,288.73437,288.71875,287.3125,289.26562,290.29687,290.51562,288.75,289.39062,289.67187,289.1875,289.75,290.8125,288.85937,289.29687,288.5,287.98437,288.3125,290.8125,289.98437,288.5,289.73437,288.54687,287.45312,289.20312,288.84375,288.1875,289.03125,289.15625,290.96875,289.67187,289.4375,289.5625,291.03125,288.42187,289.15625,289.95312,290.84375,289.54687,289.92187,289.0625,289.07812,288.42187,288.64062,289.82812,289.9375,286.23437,287.45312,287.48437,286.3125,285.70312,288.125,287.375,286.34375,289.125,290.21875,289.71875,288.71875,289.625,289.45312,289.45312,289.5,290.46875,288.95312,288.89062,290.45312,288.26562,290.39062,291.21875,288.5,289.23437,288.54687,289.57812,289.39062,288.45312,291.10937,287.75,290.32812,289.10937,290.5625,290.67187,290.98437,288.0625,289.09375,288.70312,290.75,289.625,288.75,290.14062,290.70312,289.23437,289.71875,288.5625,289.15625,288.67187,288.34375,289.35937,289.46875,289.29687,290.34375,289.15625,291.04687,289.35937,289.03125,289.5625,289.8125,290.79687,288.78125,289.48437,290.1875,288.78125,289.15625,291.54687,288.875,289.65625,288.4375,289.4375,288.75,289.65625,289.73437,286.6875,289.07812,289.64062,289.375,289.84375,289.64062,289.9375,287.64062,288.32812,291.32812,284.1875,288.9375,290.4375,289.26562,290.4375,289.28125,288.9375,290.73437,288.6875,288.32812,289.625,288.32812,290.53125,289.3125,288.98437,285.89062,288.48437,288.89062,288.20312,288.09375,291.92187,287.54687,288.35937,288.64062,288.98437,285.75,288.35937,289.40625,289.35937,288.32812,290.70312,289.9375,288.07812,289.07812,288.67187,290.09375,289.23437,288.89062,288.85937,287.75,288.65625,289.4375,287.25,289.17187,289.64062,287.5625,287.76562,285.32812,285.79687,286.42187,285.45312,285.64062,289.5,287.9375,288.45312,290.71875,288.875,289.35937,288.28125,289.1875,290.5,289.10937,289.4375,290.70312,289.5625,287.4375,289.32812,289.125,288.6875,288.60937,287.92187,290.35937,288.25,289.71875,288.95312,288.07812,289.21875,288.375,287.57812,289.75,290.20312,288.90625,289.10937,288.95312,289.48437,284.98437,288.09375,287.20312,289.39062,289.29687,288.96875,291.5,289.23437,289.09375,289.85937,290,289.10937,288.35937,289.15625,290.78125,290.85937,289.04687,289.4375,289.82812,287.5625,289.71875,289.60937,289.64062,289.40625,290.79687,289.17187,288.89062,288.90625,290.48437,288.70312,290.625,289.85937,288.625,289.85937,288.76562,290.15625,288.45312,289.6875,289.9375,289.39062,287.59375,289.53125,290.04687,289.21875,288.96875,286.64062,290.51562,288.96875,289.07812,289.20312,289.57812,290.60937,288.78125,287.67187,290.03125,288.64062,289.3125,288.6875,290.46875,288.57812,289.4375,289.5625,290.17187,287.39062,288.39062,289.625,288.70312,289.29687,290.17187,289.5625,290.26562,289.75,291.25,289.32812,288.90625,290.40625,289.8125};

// Variables para implementar las interrupciones con el Timer
// Fuente: https://techtutorialsx.com/2017/10/07/esp32-arduino-timer-interrupts/
volatile int interruptCounter;
int totalInterruptCounter;
hw_timer_t *timer = NULL;   /* se crea un puntero de tipo hw_timer para la configuraci칩n del timer */
portMUX_TYPE timerMux = portMUX_INITIALIZER_UNLOCKED;

// ISR
void IRAM_ATTR onTimer() {
  portENTER_CRITICAL_ISR(&timerMux);
  interruptCounter++;
  portEXIT_CRITICAL_ISR(&timerMux);
}

// Definici칩n de los filtros

// Pulso detectado entre 24 y 162 ppm
// Para 200 muestras por segundo

const double sos_h[][6] = {                 // filtro pulso 1: paso alta, IIR, orden 2, 0.1-0.8 Hz, 20 dB
    {1, -2, 1,  1, -1.98598595723005, 0.986083473009604} 
};
const double g_h[] = {0.993017357559912};
SOSFilter<1> filter_h(sos_h, g_h);

const double sos_h2[][6] = {                 // filtro pulso 3: paso bajo, IIR, m칤nimo orden, 1-10 Hz, 80 dB
    {1, 2, 1,  1, -1.96698444058921, 0.969464886120290},
    {1, 2, 1,  1, -1.91956461799301, 0.921985265243733},
    {1, 1, 0,  1, -0.951024900504297,  0}
};
const double g_h2[] = {0.000620111382771082, 0.000605161812680899, 0.0244875497478514};
SOSFilter<3> filter_h2(sos_h2, g_h2);


// Respiraci칩n entre 0 y 120 rpm
const double sos_b[][6] = {              // filtro resp: paso baja, IIR, m칤nimo orden, 0.1-1.5 Hz, 50 dB
    {1, 2, 1,  1, -1.99305810207877, 0 .993105797090774},
    {1, 1, 0,  1, -0.993105714885021, 0}
};
const double g_b[] = {0.0000119237530005953, 0.00344714255748968};
SOSFilter<2> filter_b(sos_b, g_b);

void setup(){
  
  Serial.begin(115200);

  // Inicializamos el BT
  ESP_BT.begin("ESP32_SENSOBED"); 						// Nombre del dispositivo bt
  Serial.println("Bluetooth device is ready to pair");
  pinMode (LED, OUTPUT);								//Specify that LED pin is output

// Setup del timer para la interrupcion      
  timer = timerBegin(0, 80, true);              // timerBegin(n_timer, prescaler, ascendente (true)) 
                                                // La frecuencia se reduce a 80MHz/80=1MHz, timer cuenta uno cada 1us
  timerAttachInterrupt(timer, &onTimer, true);  // (nombre_timer, &nombre_rutina, true = (interrupcion genera edge))
                                                // Asociaci칩n de una rutina al desbordamiento del timer (interrupci칩n)  

  ////// Modificar
  timerAlarmWrite(timer, 5000, true);         	// (nombre_timer, n_saltos_timer, true = (cuando salta la int, el timer empieza de nuevo a contar))
												// Se produce una interrupcion cada 5000us = 5ms

  // Setup para la entrada analogica
  analogSetClockDiv(1); 					  	// analogSetClockDiv(attenuation): set the divider for the ADC clock. 
												// Default is 1. Range: 1 to 255
												// El ADC es de 12 bits
  delay(1000); 									// give me time to bring up serial monitor

  // Inicializamos las variables. 
  num_respiraciones=0;
  actividad=0;
  muestra_h=0;
  muestra_b=0;
  muestra_filtrada=0;
  muestra1b=0;
  muestra2b=0;
  muestra3b=0;
  contador=0;
  j=0;
  t1=0;
  t2=0;
  maximo=0;
  minimo_detectado=0;
  longitud_ventana = samples;
  t_max = 0.4;
  
  /*HR_vector = (int*)malloc(longitud_vectores);
  BR_vector = (int*)malloc(longitud_vectores);
  ACT_vector = (int*)malloc(longitud_vectores);*/
  for (int i=0;i<=longitud_vectores;i++){
    HR_vector[i]=0;
    BR_vector[i]=0;
    ACT_vector[i]=0;
  }
  for (int i=0;i<=samples;i++){
    vReal[i]=0;
    vImag[i]=0;
  }

}

void loop(){

incoming = 0;
if (ESP_BT.available()){ 		//Check if we receive anything from Bluetooth
  incoming = ESP_BT.read(); 	//Read what we recevive   
  if (incoming == 49){ 			// En ASCII, el "1" es el codigo 49
	inicio_datos = 1;
	contador = 0;
	timerAlarmEnable(timer);	// Inicio del timer
	digitalWrite(LED, HIGH); 	// Encendemos el LED
  }
  else if (incoming == 48){ 	// En ASCII, es "0"
	inicio_datos = 0;
	digitalWrite(LED, LOW); 	// Apagamos el LED
  }
  else if (incoming == 50){ 	// En ASCII, es "2"
	envio_datos = 1;
  }
}

if(wait == 0){
    
  if(inicio_datos == 1){
  
    if (interruptCounter > 0) {   // se ejecuta por interrupci칩n
  
      portENTER_CRITICAL(&timerMux);
      interruptCounter--;
      portEXIT_CRITICAL(&timerMux);
      totalInterruptCounter++;
    
      muestra_h=0;
      muestra_b=0;
      for (int i=0; i<num_promedio; i++) {
        muestra_b = muestra_b + analogRead(ANALOG_PIN_0);
        muestra_h = muestra_h + analogRead(ANALOG_PIN_1);
      }
      muestra_b = muestra_b/num_promedio;
      muestra_h = muestra_h/num_promedio;
      // Para usar el vector de la se침al de prueba y mostrarlo. 
      //muestra_h=senal_b[j];
      //Serial.println(muestra_h,5);
  
      // DETECCI칍N DE ACTIVIDAD: del canal del pulso
      if ((muestra_h>=4000)||(muestra_h<=100)){
        actividad=1;
      }
     
     // DETECCI칍N DE RESPIRACI칍N  
      muestra_filtrada=filter_b.filter(muestra_b);
      //Serial.println(muestra_filtrada,5);
            
      if (j==0){   //almacena las primeras 3
        muestra1b=muestra_filtrada;
      }
      if (j==1){
        muestra2b=muestra_filtrada;
      }
      if (j==2){
        muestra3b=muestra_filtrada;
      }
      if(muestra1b<=muestra2b){   		// comprueba si la muestra2 es maxima
        if (muestra3b<muestra2b){
          maximo=muestra2b;
          minimo_detectado=0;
        }
      }
      if(muestra1b>muestra2b){
        if (muestra3b>=muestra2b){      // si la muestra2 es m칤nima
          if (maximo-muestra2b>limite_ruido_resp){
            if(minimo_detectado==0){
              num_respiraciones=num_respiraciones+1;
              minimo_detectado=1;
            }
          }
        }
      }
      else if(muestra1b==muestra2b){
        if (muestra3b>muestra2b){
          if (maximo-muestra2b>limite_ruido_resp){
            if(minimo_detectado==0){
              num_respiraciones=num_respiraciones+1;
              minimo_detectado=1;
            }
          }
        }
      }
      muestra1b=muestra2b;
      muestra2b=muestra3b;
      muestra3b=muestra_filtrada;
  
      
      // DETECCI칍N DE PULSO
      senal_filtro_h=filter_h.filter(muestra_h);
      if (senal_filtro_h<0){
        senal_filtro_h = 0;  
      }
      //Serial.println(senal_filtro_h,5);
      muestra_filtrada_y=senal_filtro_h*senal_filtro_h; // se eleva al cuadrado la se침al filtrada
      muestra_filtrada=filter_h2.filter(muestra_filtrada_y); // se aplica el segundo filtro
      //Serial.println(muestra_filtrada,5);
      vReal[j]=muestra_filtrada;
      vImag[j]=0;
      //int t_final = millis();
      //Serial.println(t_final);
      j=j+1;
      
      if (j==longitud_ventana){
        j=0;

        FFT.Windowing(vReal, samples, FFT_WIN_TYP_HAMMING, FFT_FORWARD);  /* Weigh data */
        FFT.Compute(vReal, vImag, samples, FFT_FORWARD); /* Compute FFT */
        FFT.ComplexToMagnitude(vReal, vImag, samples); /* Compute magnitudes */
        double x = FFT.MajorPeak(vReal, samples, velocidad_muestreo);
        //Serial.print("frecuencia: ");
        //Serial.println(x, 6); //Print out what frequency is the most dominant.*/
        //int t_final = millis();
        //Serial.println(t_final-t_ini);
        H_R = (int) 60*x;
        
        B_R= num_respiraciones*velocidad_muestreo*60/(float)longitud_ventana; //respiraciones por minuto
        
        Serial.print("ACT: ");
        Serial.println(actividad);
        Serial.println();
        Serial.print("HR: ");
        Serial.println(H_R);
        Serial.println();
        Serial.print("BR: ");
        Serial.print(num_respiraciones);
        Serial.print(" ");
        Serial.println(B_R);
        //Serial.println(contador);
        Serial.println("---------------------------");
    
        HR_vector[contador]=H_R;
        BR_vector[contador]=B_R;
        ACT_vector[contador]=actividad;

        for (int i=0;i<=samples;i++){
          vReal[i]=0;
          vImag[i]=0;
        }
        //fin=1;
        
        actividad=0;
        num_respiraciones=0;
        contador++;  

         // Se env칤an los datos a la app cada 1000 valores y se siguen capturando otros 1000 datos.  
        if(contador==80){
            timerAlarmDisable(timer);
            
            // Enviamos los datos de pulso cardiaco
            for (int i = 0; i<contador; i++) {
              ESP_BT.print(HR_vector[i]);
              ESP_BT.print("\n");
            }
            ESP_BT.print("#"); // Car치cter fin de datos
            Serial.println("FIN array HR-1000");
        
            // Enviamos los datos de respiracion
            for (int i = 0; i<contador; i++) {
              ESP_BT.print(BR_vector[i]);
              ESP_BT.print("\n");
            }
            ESP_BT.print("#"); // Car치cter fin de datos
            Serial.println("FIN array BR-1000");
        
            // Enviamos los datos de actividad
            for (int i = 0; i<contador; i++) {
              ESP_BT.print(ACT_vector[i]);
              ESP_BT.print("\n");
            }
            ESP_BT.print("#"); // Car치cter fin de datos
            Serial.println("FIN array BR-1000");
            contador = 0;
            // Se reinicia el vector para seguir rellenando desde 0 otra vez. 
            for (int i=0;i<=longitud_vectores;i++){
              HR_vector[i]=0;
              BR_vector[i]=0;
              ACT_vector[i]=0;
            }
            timerAlarmEnable(timer);
          
        }
        // Para evitar que de error por escribir en posici칩n superior al tama침o del vector. 
        if(contador>=longitud_vectores){
          wait=1;
        }
        t1=0;
        t2=0;
        minimo_detectado=0;
		}
      //while(fin);
      }
   }//fin de if de toma de datos
 }// fin del wait








  if (envio_datos == 1){

    timerAlarmDisable(timer);

    // Para resolver el problema con vectores menores en Android
    // Si mandas menos, hay dos fin de car치cter # en la misma trama, y el m칠todo de 
    // separar en Android, no sirve. 
    if (contador<80){
      contador = 80;
    }
    
    // Enviamos los datos de pulso cardiaco
    for (int i = 0; i<contador; i++) {
      ESP_BT.print(HR_vector[i]);
      ESP_BT.print("\n");
    }
    ESP_BT.print("#"); // Car치cter fin de datos
    Serial.println("FIN array de latidos");

    // Enviamos los datos de respiracion
    for (int i = 0; i<contador; i++) {
      ESP_BT.print(BR_vector[i]);
      ESP_BT.print("\n");
    }
    ESP_BT.print("#"); // Car치cter fin de datos
    Serial.println("FIN array de respiraciones");

    // Enviamos los datos de actividad
    for (int i = 0; i<contador; i++) {
      ESP_BT.print(ACT_vector[i]);
      ESP_BT.print("\n");
    }
    // En este caso ya no hace falta car치cter de fin de datos
    Serial.println("FIN array de actividad");
    envio_datos = 0;
    
    for (int i=0;i<=longitud_vectores;i++){
      HR_vector[i]=0;
      BR_vector[i]=0;
      ACT_vector[i]=0;
    }
    
  }//fin if envio de datos

}
